//=============================================================================
//
// バーベル処理 [Babel.h]
// Author : HAL東京 GP11B341-01 80163 飯塚　春輝
//
//=============================================================================
#ifndef _BABEL_H_
#define _BABEL_H_

#include "main.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define	BABEL_XFILE		"data/MODEL/babel.x"	// 読み込むモデル名
#define	BABEL_NUM		(100)					// バーベルの数

//*****************************************************************************
// グローバル変数
//*****************************************************************************

// キャラクターのデータを管理する構造体
typedef struct {
	LPDIRECT3DTEXTURE9	D3DTexture;			// テクスチャへのポインタ
	LPD3DXMESH			D3DXMesh;			// メッシュ情報へのポインタ
	LPD3DXBUFFER		D3DXBuffMat;		// マテリアル情報へのポインタ
	DWORD				NumMat;				// マテリアル情報の数
	D3DXVECTOR3			pos;				// モデルの位置
	D3DXVECTOR3			move;				// モデルの移動量
	D3DXVECTOR3			rot;				// 現在の向き
	D3DXVECTOR3			scl;				// モデルの大きさ(スケール)
}ITEM;

//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************
HRESULT InitBabel(int type);
void UninitBabel(void);
void UpdateBabel(void);
void DrawBabel(void);

#endif
